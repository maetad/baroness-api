// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	userservice "github.com/pakkaparn/no-idea-api/internal/services/userservice"
	mock "github.com/stretchr/testify/mock"
)

// UserServiceInterface is an autogenerated mock type for the UserServiceInterface type
type UserServiceInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: r
func (_m *UserServiceInterface) Create(r userservice.UserCreateRequest) (*userservice.User, error) {
	ret := _m.Called(r)

	var r0 *userservice.User
	if rf, ok := ret.Get(0).(func(userservice.UserCreateRequest) *userservice.User); ok {
		r0 = rf(r)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*userservice.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(userservice.UserCreateRequest) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUserServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserServiceInterface creates a new instance of UserServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserServiceInterface(t mockConstructorTestingTNewUserServiceInterface) *UserServiceInterface {
	mock := &UserServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
