// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// StorageProvider is an autogenerated mock type for the StorageProvider type
type StorageProvider struct {
	mock.Mock
}

// GetSigedURL provides a mock function with given fields: filename, expired
func (_m *StorageProvider) GetSigedURL(filename string, expired time.Duration) (string, error) {
	ret := _m.Called(filename, expired)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, time.Duration) string); ok {
		r0 = rf(filename, expired)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, time.Duration) error); ok {
		r1 = rf(filename, expired)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upload provides a mock function with given fields: file, filename
func (_m *StorageProvider) Upload(file []byte, filename string) (string, error) {
	ret := _m.Called(file, filename)

	var r0 string
	if rf, ok := ret.Get(0).(func([]byte, string) string); ok {
		r0 = rf(file, filename)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte, string) error); ok {
		r1 = rf(file, filename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewStorageProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewStorageProvider creates a new instance of StorageProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageProvider(t mockConstructorTestingTNewStorageProvider) *StorageProvider {
	mock := &StorageProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
