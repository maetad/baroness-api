// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UserInterface is an autogenerated mock type for the UserInterface type
type UserInterface struct {
	mock.Mock
}

// SetPassword provides a mock function with given fields: password
func (_m *UserInterface) SetPassword(password string) {
	_m.Called(password)
}

// ValidatePassword provides a mock function with given fields: password
func (_m *UserInterface) ValidatePassword(password string) error {
	ret := _m.Called(password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserInterface creates a new instance of UserInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserInterface(t mockConstructorTestingTNewUserInterface) *UserInterface {
	mock := &UserInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
